<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0 (Python 3.9.11 on win32)" generated="20220501 11:48:24.441" rpa="false" schemaversion="3">
<suite id="s1" name="Robot Openweather Api" source="C:\Users\reinaldo.junior\Documents\projetos\robot_openweather_api">
<suite id="s1-s1" name="Features" source="C:\Users\reinaldo.junior\Documents\projetos\robot_openweather_api\features">
<suite id="s1-s1-s1" name="Specifications" source="C:\Users\reinaldo.junior\Documents\projetos\robot_openweather_api\features\specifications">
<suite id="s1-s1-s1-s1" name="Weather Spec" source="C:\Users\reinaldo.junior\Documents\projetos\robot_openweather_api\features\specifications\weather_spec.robot">
<test id="s1-s1-s1-s1-t1" name="Checking the weather by city" line="7">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:24.550" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.550"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.550"/>
</kw>
<kw name="When send a request about the city weather" library="weather_steps_call">
<kw name="Setting the parameters for city weather test" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>q=${city}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:24.550" level="INFO">&amp;{params} = { q=S達o Paulo | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.550"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{params}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220501 11:48:24.550" level="INFO">&amp;{params} = { q=S達o Paulo | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.550"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.550"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:24.988" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:24.988" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '474', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416443,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200} 
 </msg>
<msg timestamp="20220501 11:48:24.988" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:24.988" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.988"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Then validating the Response's success data" library="weather_steps">
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:24.988" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416443,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}</msg>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPONSE.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220501 11:48:24.988" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<arg>${CITY}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:24.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<tag>api_tests</tag>
<tag>weather_by_city</tag>
<status status="PASS" starttime="20220501 11:48:24.550" endtime="20220501 11:48:24.988"/>
</test>
<test id="s1-s1-s1-s1-t2" name="Checking the weather by id" line="13">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:24.988" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="When send a request about the city weather by id" library="weather_steps_call">
<kw name="Setting the parameters for weather test by id" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>id=${ID_CITY}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:24.988" level="INFO">&amp;{params} = { id=3448439 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{params}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220501 11:48:24.988" level="INFO">&amp;{params} = { id=3448439 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:24.988"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:25.409" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:25.409" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '475', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?id=3448439', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.52,"feels_like":298.68,"temp_min":296.95,"temp_max":300.45,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416149,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200} 
 </msg>
<msg timestamp="20220501 11:48:25.409" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:25.409" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:25.409"/>
</kw>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Then validating the Response's success data" library="weather_steps">
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:25.409" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.52,"feels_like":298.68,"temp_min":296.95,"temp_max":300.45,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416149,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}</msg>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPONSE.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220501 11:48:25.409" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<arg>${CITY}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:25.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<tag>api_tests</tag>
<tag>weather_by_id</tag>
<status status="PASS" starttime="20220501 11:48:24.988" endtime="20220501 11:48:25.409"/>
</test>
<test id="s1-s1-s1-s1-t3" name="Checking weather by longitude and latitude" line="19">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:25.409" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="When send a request about weather by longitude and latitude" library="weather_steps_call">
<kw name="Setting the parameters for weather by longitude and latitude" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>lat=${LATITUDE}</arg>
<arg>lon=${LONGITUDE}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:25.409" level="INFO">&amp;{params} = { lat=-23.5475 | lon=-46.6361 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{params}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220501 11:48:25.409" level="INFO">&amp;{params} = { lat=-23.5475 | lon=-46.6361 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.409"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:25.863" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:25.863" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '475', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?lat=-23.55&amp;lon=-46.64', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.48,"feels_like":298.64,"temp_min":296.95,"temp_max":300.45,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416292,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200} 
 </msg>
<msg timestamp="20220501 11:48:25.863" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.863"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:25.863" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:25.863" endtime="20220501 11:48:25.863"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.863"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.863"/>
</kw>
<kw name="Then validating the Response's success data" library="weather_steps">
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:25.863" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.48,"feels_like":298.64,"temp_min":296.95,"temp_max":300.45,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416292,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}</msg>
<status status="PASS" starttime="20220501 11:48:25.863" endtime="20220501 11:48:25.863"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPONSE.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20220501 11:48:25.879" level="INFO">Length is 13</msg>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()["sys"]}</arg>
<arg>country</arg>
<arg>${COUNTRY}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>coord</arg>
<arg>${COORDINATES}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<arg>${CITY}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_ESPERADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:25.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.863" endtime="20220501 11:48:25.879"/>
</kw>
<tag>api_tests</tag>
<tag>weather_long_lati</tag>
<status status="PASS" starttime="20220501 11:48:25.409" endtime="20220501 11:48:25.879"/>
</test>
<test id="s1-s1-s1-s1-t4" name="Checking weather by zip code" line="25">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:25.879" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<kw name="When send a request about weather by zip code us" library="weather_steps_call">
<kw name="Setting the parameters for weather by zip code us" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>zip=${ZIP_CODE_US}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:25.879" level="INFO">&amp;{params} = { zip=94040,us | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{params}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220501 11:48:25.879" level="INFO">&amp;{params} = { zip=94040,us | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:25.879"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:26.347" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:26.347" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?zip=94040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '474', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?zip=94040%2cus', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-122.088,"lat":37.3855},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":283.18,"feels_like":282.38,"temp_min":280.96,"temp_max":285.19,"pressure":1013,"humidity":82},"visibility":10000,"wind":{"speed":1.54,"deg":170},"clouds":{"all":0},"dt":1651416507,"sys":{"type":2,"id":2017352,"country":"US","sunrise":1651410785,"sunset":1651460255},"timezone":-25200,"id":0,"name":"Mountain View","cod":200} 
 </msg>
<msg timestamp="20220501 11:48:26.347" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:26.347"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:26.347" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.347"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:26.347"/>
</kw>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:26.347"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>200</arg>
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:26.347" level="INFO">Response: {"coord":{"lon":-122.088,"lat":37.3855},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":283.18,"feels_like":282.38,"temp_min":280.96,"temp_max":285.19,"pressure":1013,"humidity":82},"visibility":10000,"wind":{"speed":1.54,"deg":170},"clouds":{"all":0},"dt":1651416507,"sys":{"type":2,"id":2017352,"country":"US","sunrise":1651410785,"sunset":1651460255},"timezone":-25200,"id":0,"name":"Mountain View","cod":200}</msg>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.347"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.347"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:26.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.347"/>
</kw>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.347"/>
</kw>
<tag>api_tests</tag>
<tag>weather_zipcod</tag>
<status status="PASS" starttime="20220501 11:48:25.879" endtime="20220501 11:48:26.347"/>
</test>
<test id="s1-s1-s1-s1-t5" name="Checking weather by not found zip code" line="31">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:26.347" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.347"/>
</kw>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.347"/>
</kw>
<kw name="When send a request about weather by zip code wrong" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>zip=${ZIP_CODE_FAIL}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:26.347" level="INFO">&amp;{params} = { zip=040,us | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.347"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:26.832" level="INFO">POST Request : url=http://api.openweathermap.org/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:26.832" level="INFO">POST Response : url=http://api.openweathermap.org/data/2.5/weather?zip=040%2Cus&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=404, reason=Not Found 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:27 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '40', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?zip=040%2cus', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":"404","message":"city not found"} 
 </msg>
<msg timestamp="20220501 11:48:26.832" level="INFO">${RESPONSE} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.832"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:26.832" level="INFO">${RESPONSE} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.832"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>404</arg>
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:26.832" level="INFO">Response: {"cod":"404","message":"city not found"}</msg>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:26.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<tag>api_tests</tag>
<tag>weather_zipcode_fail</tag>
<status status="PASS" starttime="20220501 11:48:26.347" endtime="20220501 11:48:26.832"/>
</test>
<test id="s1-s1-s1-s1-t6" name="Checking cities within a rectangle zone" line="37">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:26.832" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<kw name="When send a request about cities within a rectangle zone" library="weather_steps_call">
<kw name="Setting the parameters for weather by cities within a rectangle zone" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>bbox=${BBOX}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:26.832" level="INFO">&amp;{params} = { bbox=12,32,15,37,10 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{params}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220501 11:48:26.832" level="INFO">&amp;{params} = { bbox=12,32,15,37,10 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<status status="PASS" starttime="20220501 11:48:26.832" endtime="20220501 11:48:26.832"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:27.285" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:27.285" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=400, reason=Bad Request 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '44', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?bbox=12%2C32%2C15%2C37%2C10', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":"400","message":"Nothing to geocode"} 
 </msg>
<msg timestamp="20220501 11:48:27.285" level="FAIL">HTTPError: 400 Client Error: Bad Request for url: http://api.openweathermap.org/data/2.5/weather?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0</msg>
<status status="FAIL" starttime="20220501 11:48:26.832" endtime="20220501 11:48:27.285"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.285"/>
</kw>
<status status="FAIL" starttime="20220501 11:48:26.832" endtime="20220501 11:48:27.285"/>
</kw>
<status status="FAIL" starttime="20220501 11:48:26.832" endtime="20220501 11:48:27.285"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>200</arg>
<status status="NOT RUN" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.285"/>
</kw>
<tag>api_tests</tag>
<tag>weather_rectangle_zone</tag>
<status status="FAIL" starttime="20220501 11:48:26.832" endtime="20220501 11:48:27.285">HTTPError: 400 Client Error: Bad Request for url: http://api.openweathermap.org/data/2.5/weather?bbox=12%2C32%2C15%2C37%2C10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0</status>
</test>
<test id="s1-s1-s1-s1-t7" name="Checking cities in circle" line="43">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:27.285" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.285"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.285"/>
</kw>
<kw name="When send a request about weather by cities in circle" library="weather_steps_call">
<kw name="Setting the parameters for weather by cities in circle" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>lat=${LATITUDE}</arg>
<arg>lon=${LONGITUDE}</arg>
<arg>cnt=${CNT}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:27.285" level="INFO">&amp;{params} = { lat=-23.5475 | lon=-46.6361 | cnt=10 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.285"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{params}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220501 11:48:27.285" level="INFO">&amp;{params} = { lat=-23.5475 | lon=-46.6361 | cnt=10 | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.285"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.285"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:27.723" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:27.723" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?lat=-23.5475&amp;lon=-46.6361&amp;cnt=10&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '475', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?cnt=10&amp;lat=-23.55&amp;lon=-46.64', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.48,"feels_like":298.64,"temp_min":296.95,"temp_max":300.45,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416292,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200} 
 </msg>
<msg timestamp="20220501 11:48:27.723" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.723"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:27.723" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:27.723" endtime="20220501 11:48:27.723"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.723"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.723"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>200</arg>
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:27.723" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.48,"feels_like":298.64,"temp_min":296.95,"temp_max":300.45,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416292,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}</msg>
<status status="PASS" starttime="20220501 11:48:27.723" endtime="20220501 11:48:27.723"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:27.723" endtime="20220501 11:48:27.739"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:27.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:27.739"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.723" endtime="20220501 11:48:27.739"/>
</kw>
<tag>api_tests</tag>
<tag>cities_circle</tag>
<status status="PASS" starttime="20220501 11:48:27.285" endtime="20220501 11:48:27.739"/>
</test>
<test id="s1-s1-s1-s1-t8" name="Checking multilingual support" line="49">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:27.739" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:27.739"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:27.739"/>
</kw>
<kw name="When send a request about multilingual support" library="weather_steps_call">
<kw name="Setting the parameters for multilingual support" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>id=${ID_CITY}</arg>
<arg>lang=${LANGUAGE}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:27.739" level="INFO">&amp;{params} = { id=3448439 | lang=sp | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:27.739"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{params}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220501 11:48:27.739" level="INFO">&amp;{params} = { id=3448439 | lang=sp | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:27.739"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:27.739"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:28.208" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:28.208" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?id=3448439&amp;lang=sp&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '476', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?id=3448439&amp;lang=sp', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"cielo claro","icon":"01d"}],"base":"stations","main":{"temp":298.44,"feels_like":298.59,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416333,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200} 
 </msg>
<msg timestamp="20220501 11:48:28.208" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:28.208"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:28.208" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:28.208"/>
</kw>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:28.208"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>200</arg>
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:28.208" level="INFO">Response: {"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"cielo claro","icon":"01d"}],"base":"stations","main":{"temp":298.44,"feels_like":298.59,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416333,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}</msg>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:28.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<tag>api_tests</tag>
<tag>multilingual</tag>
<status status="PASS" starttime="20220501 11:48:27.739" endtime="20220501 11:48:28.208"/>
</test>
<test id="s1-s1-s1-s1-t9" name="Checking Call back function" line="55">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:28.208" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<kw name="When send a request about call back support" library="weather_steps_call">
<kw name="Setting the parameters for call back support" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>q=${city}</arg>
<arg>callback=test</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:28.208" level="INFO">&amp;{params} = { q=S達o Paulo | callback=test | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>&amp;{params}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220501 11:48:28.208" level="INFO">&amp;{params} = { q=S達o Paulo | callback=test | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.208"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:28.668" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:28.668" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:29 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Content-Length': '480', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?callback=test&amp;q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body=test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416509,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}) 
 </msg>
<msg timestamp="20220501 11:48:28.668" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.668"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:28.668" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:28.668" endtime="20220501 11:48:28.668"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.668"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.668"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>200</arg>
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:28.668" level="INFO">Response: test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416509,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200})</msg>
<status status="PASS" starttime="20220501 11:48:28.668" endtime="20220501 11:48:28.668"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:28.668" endtime="20220501 11:48:28.668"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:28.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:28.668" endtime="20220501 11:48:28.668"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.668" endtime="20220501 11:48:28.684"/>
</kw>
<tag>api_tests</tag>
<tag>call_back</tag>
<status status="PASS" starttime="20220501 11:48:28.208" endtime="20220501 11:48:28.684"/>
</test>
<test id="s1-s1-s1-s1-t10" name="Checking Units of measurement - For temperature in Fahrenheit use units=imperial" line="61">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:28.684" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:28.684" endtime="20220501 11:48:28.684"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.684" endtime="20220501 11:48:28.684"/>
</kw>
<kw name="When send a request about Units of measurement" library="weather_steps">
<arg>imperial</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:28.684" level="INFO">&amp;{params} = { q=S達o Paulo | units=imperial | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:28.684" endtime="20220501 11:48:28.684"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:29.106" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:29.106" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:30 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Content-Length': '480', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?callback=test&amp;q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body=test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416509,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}) 
 </msg>
<msg timestamp="20220501 11:48:29.106" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:28.684" endtime="20220501 11:48:29.106"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:29.106" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:29.106" endtime="20220501 11:48:29.106"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.684" endtime="20220501 11:48:29.106"/>
</kw>
<status status="PASS" starttime="20220501 11:48:28.684" endtime="20220501 11:48:29.106"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>200</arg>
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:29.122" level="INFO">Response: test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416509,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200})</msg>
<status status="PASS" starttime="20220501 11:48:29.106" endtime="20220501 11:48:29.122"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.122"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:29.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.122"/>
</kw>
<status status="PASS" starttime="20220501 11:48:29.106" endtime="20220501 11:48:29.122"/>
</kw>
<tag>api_tests</tag>
<tag>units_imperial</tag>
<status status="PASS" starttime="20220501 11:48:28.684" endtime="20220501 11:48:29.122"/>
</test>
<test id="s1-s1-s1-s1-t11" name="Checking Units of measurement - For temperature in Celsius use units=metric" line="67">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:29.122" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.122"/>
</kw>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.122"/>
</kw>
<kw name="When send a request about Units of measurement" library="weather_steps">
<arg>metric</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:29.122" level="INFO">&amp;{params} = { q=S達o Paulo | units=metric | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.122"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:29.591" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:29.591" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:30 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Content-Length': '480', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?callback=test&amp;q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body=test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416509,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}) 
 </msg>
<msg timestamp="20220501 11:48:29.591" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.591"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:29.591" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:29.591" endtime="20220501 11:48:29.591"/>
</kw>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.591"/>
</kw>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.591"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>200</arg>
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:29.591" level="INFO">Response: test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416509,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200})</msg>
<status status="PASS" starttime="20220501 11:48:29.591" endtime="20220501 11:48:29.591"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:29.591" endtime="20220501 11:48:29.591"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:29.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:29.591" endtime="20220501 11:48:29.591"/>
</kw>
<status status="PASS" starttime="20220501 11:48:29.591" endtime="20220501 11:48:29.591"/>
</kw>
<tag>api_tests</tag>
<tag>units_metric</tag>
<status status="PASS" starttime="20220501 11:48:29.122" endtime="20220501 11:48:29.591"/>
</test>
<test id="s1-s1-s1-s1-t12" name="Checking Units of measurement - For temperature in Kelvin use units=standard" line="73">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:29.606" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:29.591" endtime="20220501 11:48:29.606"/>
</kw>
<status status="PASS" starttime="20220501 11:48:29.591" endtime="20220501 11:48:29.606"/>
</kw>
<kw name="When send a request about Units of measurement" library="weather_steps">
<arg>standard</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>q=${city}</arg>
<arg>units=${UNITS}</arg>
<arg>appid=${API_KEY}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:29.606" level="INFO">&amp;{params} = { q=S達o Paulo | units=standard | appid=e2f1d841cc16cff49a0aa18b531d71e0 }</msg>
<status status="PASS" starttime="20220501 11:48:29.606" endtime="20220501 11:48:29.606"/>
</kw>
<kw name="Setting session to weather using GET method" library="weather_steps">
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:30.044" level="INFO">GET Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:30.044" level="INFO">GET Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;callback=test&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0 
 status=200, reason=OK 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:31 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Content-Length': '480', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?callback=test&amp;q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body=test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416509,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200}) 
 </msg>
<msg timestamp="20220501 11:48:30.044" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:29.606" endtime="20220501 11:48:30.044"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:30.044" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.044"/>
</kw>
<status status="PASS" starttime="20220501 11:48:29.606" endtime="20220501 11:48:30.044"/>
</kw>
<status status="PASS" starttime="20220501 11:48:29.606" endtime="20220501 11:48:30.044"/>
</kw>
<kw name="Then expect API response will be code" library="weather_steps">
<arg>200</arg>
<kw name="Log" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220501 11:48:30.044" level="INFO">Response: test({"coord":{"lon":-46.6361,"lat":-23.5475},"weather":[{"id":800,"main":"Clear","description":"clear sky","icon":"01d"}],"base":"stations","main":{"temp":298.47,"feels_like":298.62,"temp_min":296.95,"temp_max":299.9,"pressure":1019,"humidity":60},"visibility":10000,"wind":{"speed":5.66,"deg":340},"clouds":{"all":0},"dt":1651416509,"sys":{"type":1,"id":8394,"country":"BR","sunrise":1651397207,"sunset":1651437618},"timezone":-10800,"id":3448439,"name":"S達o Paulo","cod":200})</msg>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.044"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${RESPONSE.text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.044"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>${STATUS_CODE}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220501 11:48:30.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.044"/>
</kw>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.044"/>
</kw>
<tag>api_tests</tag>
<tag>units_standard</tag>
<status status="PASS" starttime="20220501 11:48:29.591" endtime="20220501 11:48:30.044"/>
</test>
<test id="s1-s1-s1-s1-t13" name="Search weather data by city name with invalid api key" line="79">
<kw name="Given I start the session" library="weather_steps">
<kw name="Create Session" library="RequestsLibrary">
<arg>${SESSION}</arg>
<arg>${HOST_BASE}</arg>
<arg>headers=${HEADER}</arg>
<arg>disable_warnings=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220501 11:48:30.044" level="INFO">Creating Session using : alias=weather, url=http://api.openweathermap.org/data/2.5, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.044"/>
</kw>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.044"/>
</kw>
<kw name="When send a request within invalid api key" library="weather_steps">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{params}</var>
<arg>q=${city}</arg>
<arg>appid=${API_KEY_INCORRETA}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220501 11:48:30.059" level="INFO">&amp;{params} = { q=S達o Paulo | appid=e2f1d841cc16cff49a0aa18b531d71e0x }</msg>
<status status="PASS" starttime="20220501 11:48:30.059" endtime="20220501 11:48:30.059"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPONSE}</var>
<arg>${SESSION}</arg>
<arg>${WEATHER_ENDPOINT}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADER}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220501 11:48:30.481" level="INFO">POST Request : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 path_url=/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220501 11:48:30.481" level="INFO">POST Response : url=http://api.openweathermap.org/data/2.5/weather?q=S%C3%A3o+Paulo&amp;appid=e2f1d841cc16cff49a0aa18b531d71e0x 
 status=401, reason=Unauthorized 
 headers={'Server': 'openresty', 'Date': 'Sun, 01 May 2022 14:48:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '107', 'Connection': 'keep-alive', 'X-Cache-Key': '/data/2.5/weather?q=s%c3%a3o+paulo', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Methods': 'GET, POST'} 
 body={"cod":401, "message": "Invalid API key. Please see http://openweathermap.org/faq#error401 for more info."} 
 </msg>
<msg timestamp="20220501 11:48:30.481" level="INFO">${RESPONSE} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:30.059" endtime="20220501 11:48:30.481"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220501 11:48:30.481" level="INFO">${RESPONSE} = &lt;Response [401]&gt;</msg>
<status status="PASS" starttime="20220501 11:48:30.481" endtime="20220501 11:48:30.481"/>
</kw>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.481"/>
</kw>
<kw name="Then validate error message for invalid api key" library="weather_steps">
<kw name="Dictionary Should Contain Item" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>message</arg>
<arg>${MSN_INVALID_KEY}</arg>
<doc>An item of ``key`` / ``value`` must be found in a ``dictionary``.</doc>
<status status="PASS" starttime="20220501 11:48:30.481" endtime="20220501 11:48:30.481"/>
</kw>
<status status="PASS" starttime="20220501 11:48:30.481" endtime="20220501 11:48:30.481"/>
</kw>
<tag>api_key_invalid</tag>
<tag>api_tests</tag>
<status status="PASS" starttime="20220501 11:48:30.044" endtime="20220501 11:48:30.481"/>
</test>
<status status="FAIL" starttime="20220501 11:48:24.456" endtime="20220501 11:48:30.481"/>
</suite>
<status status="FAIL" starttime="20220501 11:48:24.456" endtime="20220501 11:48:30.481"/>
</suite>
<status status="FAIL" starttime="20220501 11:48:24.456" endtime="20220501 11:48:30.481"/>
</suite>
<status status="FAIL" starttime="20220501 11:48:24.441" endtime="20220501 11:48:30.481"/>
</suite>
<statistics>
<total>
<stat pass="12" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">api_key_invalid</stat>
<stat pass="12" fail="1" skip="0">api_tests</stat>
<stat pass="1" fail="0" skip="0">call_back</stat>
<stat pass="1" fail="0" skip="0">cities_circle</stat>
<stat pass="1" fail="0" skip="0">multilingual</stat>
<stat pass="1" fail="0" skip="0">units_imperial</stat>
<stat pass="1" fail="0" skip="0">units_metric</stat>
<stat pass="1" fail="0" skip="0">units_standard</stat>
<stat pass="1" fail="0" skip="0">weather_by_city</stat>
<stat pass="1" fail="0" skip="0">weather_by_id</stat>
<stat pass="1" fail="0" skip="0">weather_long_lati</stat>
<stat pass="0" fail="1" skip="0">weather_rectangle_zone</stat>
<stat pass="1" fail="0" skip="0">weather_zipcod</stat>
<stat pass="1" fail="0" skip="0">weather_zipcode_fail</stat>
</tag>
<suite>
<stat pass="12" fail="1" skip="0" id="s1" name="Robot Openweather Api">Robot Openweather Api</stat>
<stat pass="12" fail="1" skip="0" id="s1-s1" name="Features">Robot Openweather Api.Features</stat>
<stat pass="12" fail="1" skip="0" id="s1-s1-s1" name="Specifications">Robot Openweather Api.Features.Specifications</stat>
<stat pass="12" fail="1" skip="0" id="s1-s1-s1-s1" name="Weather Spec">Robot Openweather Api.Features.Specifications.Weather Spec</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
